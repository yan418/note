 jq
     官网： http://jquery.com/
     <script type="text/javascript" src="jquery-1.12.3.min.js"></script>
	$() 和 jQuery() 这两种写法是等价的。
	jQuery全面支持css3的选择器: $("span[frank=123]").css("..."); 
	jQuery的【伪类】: 例子:     $("p:eq(2)")....
			选择器:first   	选中指定元素集合中的第一个元素	
			选择器:last 	选中指定元素集合中的最后一个元素
			选择器:eq(n) 	选中指定元素集合中从0开始，第n个元素	
			选择器:lt(n)	选中指定元素集合中从0开始，第n个元素之前的所有元素	
			选择器:gt(n)	选中指定元素集合中从0开始，第n个元素之后的所有元素	
			选择器:odd	选中指定元素集合中从0开始，所有奇数序号的元素	     奇数
			选择器:even	选中指定元素集合中从0开始，所有偶数序号的元素	     偶数

	var p = $("p")[0];     jq对象可以通过【jq对象[n]】方式转换为js原生对象
	var p = $("p").get(0); jq对象可以通过【.get(n)】方式转换为js原生对象
	$(window) $(document) $(this) 不需要加引号

	$()函数:
	     size()方法和length属性:  获取通过$()函数得到的页面元素的个数。
				      var $div = $("div").size()   var $div = $("div").length
	
	jQuery添加事件监听: $("选择器").click(function(){});
             jQuery中事件的名字，一律没有on
	     单击： click()           双击：dblclick()  鼠标进入：mouseenter() 
	     文本框得到焦点：focus()  失去焦点：blur()	鼠标离开：mouseleave() 
	     
	     其他添加事件监听的方法:
		1. $("div").on("click",function(){
			$(this).css("background-color","red");		
		   }); 
		   $("div").off("click");   //去掉div的click事件监听 
		2. 通过bind方法来给jq对象添加事件监听。  可以绑定多个事件。
		   $("div").bind(
			{
 			   click : function(){$(this).css("background-color","red");},
			   mouseenter : function(){$(this).css("background-color","pink");}
			}
		   );
	        3. 通过one方法来给jq对象添加事件监听。   只能执行一次。
		   $("div").one("click",function(){   alert("哈哈");  }); 

	常见方法：
		css()方法： 更改jq对象的css样式  
			    $().css("key","value");   
			    $("div").css(  { "key" : "value"  , "key" : "value" } );
		show()方法：元素的显示   $("div").show(500);    500就是500毫秒
		hide()方法: 元素的隐藏   $("div").hide();
		slideDown : 下拉显示     $("div").slideDown();
		slideUp() : 上滑隐藏     $("div").slideUp(500); 500就是500毫秒    隐
		fadeIn()  : 淡入         $("div").fadeIn();
  		fadeOut() : 淡出         $("div").fadeOut(500); 500就是500毫秒    隐
		addClass  : 追加类   	 $("#box").addClass("box2");     添加class 名
		removeClass 移除类  	 $("#box").removeClass("box2");  删除class 名
		attr()方法: 更改元素的属性      $("div").attr("key","value");
		html()方法: 更改元素内部的内容  $("h1").html("我是....");
		animate()方法   表示自定义动画  $("div").animate({"left":800,"top":300, "width":300	},2000，"linear");
				第一个参数是 一个JSON，表示动画的终点
				第二个参数，是动画执行完毕所需的时间。
				第三个参数，匀速运动，默认是 缓慢减速，linear是匀速
		stop()方法：表示停止元素动画   stop(布尔值,布尔值)；
				 除所有动画，默认为false表示不清除所有动画。		
				第二个参数表示是否瞬间完成当前动画，默认为false表示不立即完成当前动画。
			     立即结束当前动画： $().stop(true).animate();
			     如果当前正在运动，那么不接收新的命令：
				if(  $("div").is(":animated")  ){	
					return;	
				}
	节点关系：
		children()   选中某一个元素的所有直接儿子元素。  $('selector').children()
		find()方法   在某个节点中查找符合选择器要求的后代节点  $(this).find("li")
		parent()     查找当前节点的直属父节点		       $(this).parent()
		parents()    查找当前节点的所有祖先节点，知道html节点为止。
		siblings()   访问当前节点的所有兄弟节点                $(this).addClass('selected').siblings()
		next()       后一个亲兄弟
		prev()       前一个亲兄弟
		nextAll()    后所有亲兄弟	
		prevAll()    前所有亲兄弟
		index()      获取当前元素在其兄弟节点中的排名，从0开始 $('selector').index()
		eq(index)    获取集合中指定序号的节点		       $('selector').eq(index)
		each()	     遍历每个节点，然后执行里面的回调函数。    $('selector').each(function(index,element){})	
		delay()      表示延迟	  $().delay(600).animate();    $().delay(600).fadeOut();  //延迟600ms执行
		
	节点操作:
		插入:
			A.append(B);    //向【A节点内部】追加【B节点】		
			B.appendTo(A);	//将【B节点】追加到【A节点内部】		
			A.prepend(B);   //向【A节点内部现有内容之前】追加【B节点】			
			B.prependTo(A);	//将【B节点】追加到【A节点内部的现有内容之前】

			A.after(B);	   //在【A节点之后】添加【同级节点B】		
			A.before(B);	   //在【A节点之前】添加【同级节点B】			
			A.insertAfter(B);  //把【A节点】添加到【B节点之后】			
			A.insertBefore(B); //将【A节点】添加到【B节点之前】	
		添加：  wrap()包裹   给自己增加一个父类            A.warp(B)
		删除：
			empty()  表示删除指定节点中的内容
			remove() 则表示移除自己
		克隆： 
			clone()   A.append(B.clone) 
	
	is属性
		对象.is(":...."); 判断对象是否..
			:checked 是否被选中
			:visible 是否可见
			:animated 是否处于动画状态


